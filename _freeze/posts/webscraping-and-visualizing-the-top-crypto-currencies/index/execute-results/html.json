{
  "hash": "8c535202e4a3e4db967030c7a01c0987",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Webscraping and Visualizing the Top CryptoCurrencies\"\nsubtitle: \"Top Cryptocurrencies According to Price and Market Cap\"\ndate: \"2024-07-4\"\ncategories: [Webscraping, Data Visualization]\ncode-fold: true\ncode-copy: hover\ncode-summary: \"Show the code\"\nimage: image.jpeg\n---\n\n::: {.cell}\n<style type=\"text/css\">\n.justify {\n  text-align:justify !important\n}\n</style>\n:::\n\n\n::: {.justify}\nCryptocurrencies have captivated the financial world, bringing immense joy to some and heartache to many. One thing is certain: when you get it right and strike gold with cryptocurrencies, it can set you up for life (depending on your frugality and investment amount). As a data scientist, I know the thrill of diving into this dynamic market.\n\nThis post, however, isn’t about trading strategies or price forecasting. Instead, it's a exploring the capabilities of R in web scraping using the `rvest` package. Since I like to spend time in creating good visuals, I will be making some interesting visualization here.\n:::\n\n## Getting Our data\n\n::: {.justify}\nFirst, I scraped data from CoinMarketCap using the URL https://coinmarketcap.com/all/views/all/. The code extracts a specific table and selects relevant columns like name, symbol, market cap, and price.\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(pacman)\np_load(rvest, tidyverse, magick, ggimage)\n\nurl <- \"https://coinmarketcap.com/all/views/all/\"\n\ncrypto <- read_html(url) |> \n  html_nodes(\"table\") |> \n  html_table()\n\ncrypto <- crypto[[3]]\n\nhead(crypto)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 1,001\n   Rank Name        Symbol `Market Cap` Price `Circulating Supply` `Volume(24h)`\n  <int> <chr>       <chr>  <chr>        <chr> <chr>                <chr>        \n1     1 BTCBitcoin  BTC    $1.07T$1,07… $54,… 19,719,475 BTC       $52,500,564,…\n2     2 ETHEthereum ETH    $345.06B$34… $2,8… 120,196,848 ETH *    $29,468,896,…\n3     3 USDTTether… USDT   $112.44B$11… $0.9… 112,484,875,383 USD… $96,103,976,…\n4     4 BNBBNB      BNB    $69.21B$69,… $469… 147,582,870 BNB *    $2,632,825,3…\n5     5 SOLSolana   SOL    $58.11B$58,… $125… 462,886,047 SOL *    $4,203,105,4…\n6     6 USDCUSDC    USDC   $33.09B$33,… $0.9… 33,099,458,015 USDC… $9,313,268,3…\n# ℹ 994 more variables: `% 1h` <chr>, `% 24h` <chr>, `% 7d` <chr>, `` <lgl>,\n#   `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>,\n#   `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>,\n#   `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>,\n#   `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>,\n#   `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>,\n#   `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, `` <lgl>, …\n```\n\n\n:::\n:::\n\n\n## Data Exploration and Cleaning\n::: {.justify}\nI started by cleaning the column names using `janitor::clean_names()` and selecting the columns I needed. Then, I ensured data types were appropriate by converting *market_cap* and *price* to numeric values.\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncrypto <- crypto |> \n  janitor::clean_names() |> \n  select(name, symbol, market_cap, price)\n\nglimpse(crypto)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 200\nColumns: 4\n$ name       <chr> \"BTCBitcoin\", \"ETHEthereum\", \"USDTTether USDt\", \"BNBBNB\", \"…\n$ symbol     <chr> \"BTC\", \"ETH\", \"USDT\", \"BNB\", \"SOL\", \"USDC\", \"XRP\", \"TON\", \"…\n$ market_cap <chr> \"$1.07T$1,071,480,397,941\", \"$345.06B$345,058,510,685\", \"$1…\n$ price      <chr> \"$54,373.45\", \"$2,871.28\", \"$0.9996\", \"$469.29\", \"$125.54\",…\n```\n\n\n:::\n:::\n\n\n::: {.justify}\n**Is the data structure as expected?**\nFrom the data which we have above, there are some columns that needs their data types changed. The *market_cap* and *price* column should be numeric/double data type and not character.\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncrypto <- crypto |> \n  mutate(\n    market_cap = str_remove_all(market_cap, r\"--[\\$[\\d.]+[TB]]--\"),\n    market_cap = parse_number(market_cap),\n    price = parse_number(price)\n  )\n\nstr(crypto)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [200 × 4] (S3: tbl_df/tbl/data.frame)\n $ name      : chr [1:200] \"BTCBitcoin\" \"ETHEthereum\" \"USDTTether USDt\" \"BNBBNB\" ...\n $ symbol    : chr [1:200] \"BTC\" \"ETH\" \"USDT\" \"BNB\" ...\n $ market_cap: num [1:200] 1.07e+12 3.45e+11 1.12e+11 6.92e+10 5.81e+10 ...\n $ price     : num [1:200] 54373 2871 1 469 126 ...\n```\n\n\n:::\n:::\n\n\n## Handling missing Data\n::: {.justify}\nI used the `skimr` package to identify missing data. The code then filtered the \n*crypto* data frame to keep only complete rows with values in all columns.\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nskimr::n_missing(crypto)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 360\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nskimr::skim(crypto)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |       |\n|:------------------------|:------|\n|Name                     |crypto |\n|Number of rows           |200    |\n|Number of columns        |4      |\n|_______________________  |       |\n|Column type frequency:   |       |\n|character                |2      |\n|numeric                  |2      |\n|________________________ |       |\n|Group variables          |None   |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|name          |         0|             1|   3|  37|     0|      200|          0|\n|symbol        |         0|             1|   0|   4|   180|       21|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|         mean|           sd|         p0|          p25|          p50|         p75|         p100|hist  |\n|:-------------|---------:|-------------:|------------:|------------:|----------:|------------:|------------:|-----------:|------------:|:-----|\n|market_cap    |       180|           0.1| 9.107187e+10| 2.433057e+11| 4359885722| 6.659552e+09| 1.119664e+10| 3.93483e+10| 1.071480e+12|▇▁▁▁▁ |\n|price         |       180|           0.1| 2.912640e+03| 1.212951e+04|          0| 8.500000e-01| 5.540000e+00| 7.51500e+01| 5.437345e+04|▇▁▁▁▁ |\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncrypto <- crypto[complete.cases(crypto), ]\nskimr::skim_without_charts(crypto)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |       |\n|:------------------------|:------|\n|Name                     |crypto |\n|Number of rows           |20     |\n|Number of columns        |4      |\n|_______________________  |       |\n|Column type frequency:   |       |\n|character                |2      |\n|numeric                  |2      |\n|________________________ |       |\n|Group variables          |None   |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|name          |         0|             1|   6|  17|     0|       20|          0|\n|symbol        |         0|             1|   3|   4|     0|       20|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|         mean|           sd|         p0|          p25|          p50|         p75|         p100|\n|:-------------|---------:|-------------:|------------:|------------:|----------:|------------:|------------:|-----------:|------------:|\n|market_cap    |         0|             1| 9.107187e+10| 2.433057e+11| 4359885722| 6.659552e+09| 1.119664e+10| 3.93483e+10| 1.071480e+12|\n|price         |         0|             1| 2.912640e+03| 1.212951e+04|          0| 8.500000e-01| 5.540000e+00| 7.51500e+01| 5.437345e+04|\n\n\n:::\n:::\n\n\n## Data Visualization\n::: {.justify}\nNow, let's visualize the data! I created a donut chart to represent the market cap distribution of the top six cryptocurrencies. The remaining currencies are grouped into an \"Other\" category.\n\nThe code calculates the market cap share for each currency, along with cumulative values and labels for the chart.\n:::\n\n::: {#tbl-crypto-compression .cell tbl-cap='Top Six Cryptocurrencies according to Market Capitalization' tbl-subcap='20 Cryptocurrencies has been compressed to 7 '}\n\n```{.r .cell-code}\ncrypto <- crypto |> \n  mutate(\n    new_sym = fct_lump(\n      symbol, n = 6, w = market_cap\n    )\n  )\n\ncrypto |> \n  summarize(\n    .by = new_sym,\n    market_cap = sum(market_cap),\n    count = n()\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 3\n  new_sym    market_cap count\n  <fct>           <dbl> <int>\n1 BTC     1071480397941     1\n2 ETH      345058510685     1\n3 USDT     112440083915     1\n4 BNB       69212448352     1\n5 SOL       58108556585     1\n6 USDC      33094885127     1\n7 Other    132042521446    14\n```\n\n\n:::\n:::\n\n::: {.justify}\n@tbl-crypto-compression shows that the market cap has been compressed into 7, 6 for the top cryptocurrency and 14 lumped together into a new category, *Other*.\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncrypto_summary <- crypto |> \n  summarize(\n    .by = new_sym,\n    market_cap = sum(market_cap)\n  ) |> \n  mutate(\n    prop = market_cap/sum(market_cap) * 100,\n    market_cap = round(market_cap/1e9, 2),\n    market_cap = paste0(market_cap, \" B\"),\n    ymax = cumsum(prop),\n    ymin = c(0, head(ymax, n = -1)),\n    lab_pos = (ymax + ymin)/2,\n    label = paste0(new_sym, \"\\nValue: \",round(prop, 2), \"%\")\n  )\n```\n:::\n\n\n## Crytocurrencies by Market Capitalization\n\n::: {.cell labels='fig-market-cao'}\n\n```{.r .cell-code}\nggplot(\n  crypto_summary,\n  aes(xmin = 3, xmax = 4,ymin = ymin, ymax = ymax, fill = new_sym)\n) +\n  geom_rect() +\n  expand_limits(x = c(1.5, 4)) +\n  coord_polar(theta = \"y\", start = 1) +\n  scale_fill_brewer(palette =\"YlOrRd\") +\n  theme_void() +\n  ggrepel::geom_label_repel(\n    x = 3,\n    aes(y = lab_pos, label = label),\n    size = 2,\n    col = \"gray3\"\n  ) +\n  theme_void() +\n  ggtitle(\"Market Cap of Top Cryptocurrencies\") +\n  theme(\n    legend.position = \"none\"\n  )\n```\n\n::: {.cell-output-display}\n![Crypto Asset Market Cap](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\nAs shown in @fig-market-cap, Bitcoin, and ETH are clearly dominating the crypto space in market capitalization. Assets such as BNB, SOL and USDT are slowly increasing their dominance ranging from 3 - 6%.\n\n## Top 20 Cryptocurrencies Price\n:::{.justify}\nI downloaded logos for the top 20 cryptocurrencies and added them as an \"images\" column to the data frame.\n \nThe code then creates a bar chart to visualize individual cryptocurrency prices, with labels indicating the price for each currency.\n:::\n\n::: {.cell lable='get-images'}\n\n```{.r .cell-code}\nimages <- list.files(path = \"images\", full.names = TRUE)\n\ncrypto <- crypto |> \n  arrange(symbol) |> \n  bind_cols(\"images\" = images)\n\ncrypto_img <- crypto |> \n  mutate(\n    images = paste0(\"<img src='\", images, \"' width='15'/>\")\n  )\n```\n:::\n\n\nNow we can visualize the prices of each asset.\n\n::: {.cell}\n\n```{.r .cell-code}\ncrypto_img |> \n  ggplot(aes(price, fct_reorder(images, price))) +\n  geom_col(\n    width = .1,\n    fill = \"#FBD25B\"\n  ) +\n  geom_label(\n    aes(label = round(price, 2)),\n    col = \"white\",\n    fill = \"#AE1D0E\",\n    size = 2.5\n  ) +\n  labs(\n    title = \"Price of the Top 20 Cryptocurrencies\"\n  ) +\n  scale_x_log10(label = scales::label_number()) +\n  theme_minimal() +\n  theme(\n    axis.text.y = ggtext::element_markdown(),\n    axis.text.x = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    plot.title = element_text(hjust = .5, color = \"#AE1D0E\")\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n## Conclusion\n::: {.justify}\nIn this project, I successfully scraped cryptocurrency data, cleaned it for analysis, and created visualizations to explore market cap distribution and individual cryptocurrency prices. This process demonstrates the power of web scraping and data visualization in R.\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}