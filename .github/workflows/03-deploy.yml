name: 03 - Deploy to Netlify
on:
  workflow_run:
    workflows: ["02 - Render Quarto Site"]
    types: [completed]
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_BLOG_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_BLOG_ID }}
      GITHUB_PAT: ${{ secrets.BLOG_TOKEN }}
    steps:
      - name: Download rendered site
        uses: actions/github-script@v7
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let siteArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "rendered-site"
            })[0];
            let summaryArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "render-summary"
            })[0];
            
            if (siteArtifact) {
              let download = await github.rest.actions.downloadArtifact({
                 owner: context.repo.owner,
                 repo: context.repo.repo,
                 artifact_id: siteArtifact.id,
                 archive_format: 'zip',
              });
              let fs = require('fs');
              fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/rendered-site.zip`, Buffer.from(download.data));
            }
            
            if (summaryArtifact) {
              let download = await github.rest.actions.downloadArtifact({
                 owner: context.repo.owner,
                 repo: context.repo.repo,
                 artifact_id: summaryArtifact.id,
                 archive_format: 'zip',
              });
              let fs = require('fs');
              fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/render-summary.zip`, Buffer.from(download.data));
            }

      - name: Extract artifacts
        run: |
          if [ -f rendered-site.zip ]; then
            unzip rendered-site.zip -d site-content/
            ls -la site-content/
          else
            echo "No rendered site found!"
            exit 1
          fi
          
          if [ -f render-summary.zip ]; then
            unzip render-summary.zip
            echo "=== Render Summary ==="
            cat render_summary.txt
            echo "====================="
          fi

      - name: Verify site content
        run: |
          if [ ! -d "site-content" ] || [ -z "$(ls -A site-content)" ]; then
            echo "Error: Site content is empty or missing"
            exit 1
          fi
          echo "Site verification passed. Files to deploy:"
          find site-content -type f | head -20

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './site-content'
          production-branch: master
          github-token: ${{ secrets.BLOG_TOKEN }}
          deploy-message: "Auto Deploy - ${{ github.sha }} - $(date)"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true

      - name: Create deployment summary
        run: |
          echo "Deployment completed at $(date)" > deployment_summary.txt
          echo "Commit: ${{ github.sha }}" >> deployment_summary.txt
          echo "Branch: ${{ github.ref_name }}" >> deployment_summary.txt
          if [ -f render_summary.txt ]; then
            echo "" >> deployment_summary.txt
            echo "=== Render Info ===" >> deployment_summary.txt
            cat render_summary.txt >> deployment_summary.txt
          fi

      - name: Upload deployment summary
        uses: actions/upload-artifact@v4
        with:
          name: deployment-summary
          path: deployment_summary.txt
          retention-days: 30