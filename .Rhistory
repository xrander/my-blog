#| message: false
#| warning: false
#| label: fig-pairs-plot
#| fig-cap: Predictors plots
algerian_ff |>
select(-classes) |>
GGally::ggpairs(
title = "Predictors"
) +
theme_bw()
#| label: fig-reg-class
#| fig-cap: "There are more fire outbreak in  Sidi-Bel Abbes than in Bejaia"
algerian_ff |>
summarize(
.by = c(classes, region),
count = n()
) |>
ggplot(aes(region, count, fill = fct_reorder(classes, count))) +
geom_col(position = "dodge") +
geom_text(
aes(label = count),
size = 3.2,
vjust = -.2,
position = position_dodge(width = 1)
# position = position_nudge(x = 0, y =1)
) +
scale_fill_calc() +
labs(
fill = "Region",
x = "Classes",
y = "Count",
title = "Frequency of Fire Occurrence Situation Across Regions",
subtitle = "There's more fire outbreak in Sidi-Bel Abbes than in Bejaia"
)
algerian_ff |>
ggplot(aes(rain, temperature, col = classes)) +
geom_jitter() +
scale_color_wsj() +
labs(
x = "Rain",
y = "Temperature",
title = "Temperature vs Rain relationship for Fire Occurrence",
subtitle = "Fire rarely occur on days with high rainfall"
) +
theme(plot.subtitle = element_text(size = 10))
#| label: fig-rh-class
#| fig-cap: "Relative humidity of each days across the months showing the occurrence of fire."
#| fig-subcap: true
#| layout-nrow: 2
algerian_ff |>
ggplot(aes(day, rh, colour = classes)) +
geom_point() +
labs(
x = "Day",
y = "Relative Humidity (%)",
title = "Fire occurence for each days in a month given the day's humidity"
) +
facet_wrap(~month)
algerian_ff |>
ggplot(aes(day, rh, colour = classes)) +
geom_point() +
labs(
x = "Day",
y = "Relative Humidity (%)",
title = "Fire occurence for each days in a month for a region given the day's humidity"
) +
facet_grid(region~month)
#| label: tbl-distro
#| tbl-cap: Distribution of the targer variable across regions
set.seed(123)
algerian_split <- initial_split(algerian_ff, prop = .7)
algerian_train <- training(algerian_split)
algerian_train |>
count(region, classes)
lr_rec <- recipe(
classes ~ ., data = algerian_train
) |>
step_zv(all_numeric_predictors()) |>
step_nzv(all_numeric_predictors()) |>
step_YeoJohnson(all_numeric_predictors()) |>
step_scale(all_numeric_predictors()) |>
step_dummy(all_factor_predictors(),one_hot = TRUE)
lr_rec
#| label: tbl-preproc
#| tbl-cap: Preprocessed data
lr_rec |>
prep() |>
juice() |>
head() |>
kable()
#| message: false
lr_wf <- workflow() |>
add_model(lr_spec) |>
add_recipe(lr_rec) |>
fit_resamples(algerian_folds)
lr_spec <- logistic_reg() |>
set_mode("classification") |>
set_engine("glm")
lr_spec |>
translate()
algerian_folds <- vfold_cv(algerian_train, v = 10)
#| message: false
lr_wf <- workflow() |>
add_model(lr_spec) |>
add_recipe(lr_rec) |>
fit_resamples(algerian_folds)
lr_wf |>
collect_metrics()
lr_wf |>
extract_fit_parsnip()
lr_wf |>
extract_fit_engine()
lr_wf |>
extract_model()
lr_wf |>
extract_workflow()
lr_Wf
lr_wf
#| label: tbl-preproc
#| tbl-cap: Preprocessed data
lr_rec |>
prep() |>
juice() |>
head() |>
kable()
#| message: false
lr_wf <- workflow() |>
add_model(lr_spec) |>
add_recipe(lr_rec) |>
fit(algerian_train)
lr_wf |>
collect_metrics()
lr_wf
lr_wf
lr_wf |> summary()
lr_wf |> tidy()
lr_rec |>
prep() |>
juice() |>
filter(is.na(region_Sidi.Bel.Abbes))
lr_rec <- recipe(
classes ~ ., data = algerian_train
) |>
step_zv(all_numeric_predictors()) |>
step_nzv(all_numeric_predictors()) |>
step_YeoJohnson(all_numeric_predictors()) |>
step_scale(all_numeric_predictors()) |>
step_dummy(all_factor_predictors())
lr_rec
#| label: tbl-preproc
#| tbl-cap: Preprocessed data
lr_rec |>
prep() |>
juice() |>
head() |>
kable()
#| message: false
lr_wf <- workflow() |>
add_model(lr_spec) |>
add_recipe(lr_rec) |>
fit(algerian_train)
lr_wf |> tidy()
lr_rec <- recipe(
classes ~ ., data = algerian_train
) |>
step_zv(all_numeric_predictors()) |>
step_nzv(all_numeric_predictors()) |>
step_YeoJohnson(all_numeric_predictors()) |>
step_scale(all_numeric_predictors())
lr_rec
#| label: tbl-preproc
#| tbl-cap: Preprocessed data
lr_rec |>
prep() |>
juice() |>
head() |>
kable()
#| message: false
lr_wf <- workflow() |>
add_model(lr_spec) |>
add_recipe(lr_rec) |>
fit(algerian_train)
lr_wf |> tidy()
lr_wf |> augment()
lr_wf |> glance()
lr_wf |> broom::augment()
lr_wf |> broom::augment(testing(algerian_split))
lr_wf |> summary()
lr_wf |> glance()
lr_wf |> tidy()
lr_rec <- recipe(
classes ~ ., data = algerian_train
) |>
step_zv(all_numeric_predictors()) |>
step_nzv(all_numeric_predictors()) |>
step_YeoJohnson(all_numeric_predictors()) |>
step_scale(all_numeric_predictors()) |>
step_pca()
lr_rec
#| label: tbl-preproc
#| tbl-cap: Preprocessed data
lr_rec |>
prep() |>
juice() |>
head() |>
kable()
lr_rec <- recipe(
classes ~ ., data = algerian_train
) |>
step_zv(all_numeric_predictors()) |>
step_nzv(all_numeric_predictors()) |>
step_YeoJohnson(all_numeric_predictors()) |>
step_scale(all_numeric_predictors()) |>
step_pca(all_numeric_predictors())
lr_rec
#| label: tbl-preproc
#| tbl-cap: Preprocessed data
lr_rec |>
prep() |>
juice() |>
head() |>
kable()
#| message: false
lr_wf <- workflow() |>
add_model(lr_spec) |>
add_recipe(lr_rec) |>
fit(algerian_train)
lr_wf |> tidy()
lr_rec <- recipe(
classes ~ ., data = algerian_train
) |>
step_zv(all_numeric_predictors()) |>
step_nzv(all_numeric_predictors()) |>
step_YeoJohnson(all_numeric_predictors()) |>
step_scale(all_numeric_predictors()) |>
step_pca(all_numeric_predictors()) |>
step_dummy(region, one_hot = TRUE)
lr_rec
#| label: tbl-preproc
#| tbl-cap: Preprocessed data
lr_rec |>
prep() |>
juice() |>
head() |>
kable()
#| message: false
lr_wf <- workflow() |>
add_model(lr_spec) |>
add_recipe(lr_rec) |>
fit(algerian_train)
lr_wf |> tidy()
lr_rec <- recipe(
classes ~ . + 1, data = algerian_train
) |>
step_zv(all_numeric_predictors()) |>
step_nzv(all_numeric_predictors()) |>
step_YeoJohnson(all_numeric_predictors()) |>
step_scale(all_numeric_predictors()) |>
step_pca(all_numeric_predictors())
lr_rec
#| label: tbl-preproc
#| tbl-cap: Preprocessed data
lr_rec |>
prep() |>
juice() |>
head() |>
kable()
lr_rec <- recipe(
classes ~ . + 1, data = algerian_train
) |>
step_zv(all_numeric_predictors()) |>
step_nzv(all_numeric_predictors()) |>
step_YeoJohnson(all_numeric_predictors()) |>
step_scale(all_numeric_predictors()) |>
step_pca(all_numeric_predictors()) |>
step_dummy(region)
lr_rec
#| label: tbl-preproc
#| tbl-cap: Preprocessed data
lr_rec |>
prep() |>
juice() |>
head() |>
kable()
#| message: false
lr_wf <- workflow() |>
add_model(lr_spec) |>
add_recipe(lr_rec) |>
fit(algerian_train)
lr_wf |> tidy()
lr_rec <- recipe(
classes ~ . + 1, data = algerian_train
) |>
step_zv(all_numeric_predictors()) |>
step_nzv(all_numeric_predictors()) |>
step_YeoJohnson(all_numeric_predictors()) |>
step_scale(all_numeric_predictors()) |>
step_pca(all_numeric_predictors()) |>
step_dummy(region)
lr_rec
#| label: tbl-preproc
#| tbl-cap: Preprocessed data
lr_rec |>
prep() |>
juice() |>
head() |>
kable()
#| message: false
lr_wf <- workflow() |>
add_model(lr_spec) |>
add_recipe(lr_rec) |>
fit(algerian_train)
lr_wf |> tidy()
lr_wf |> augment(testing(algerian_split))
lr_wf
exp(-8.40)
exp(3.4)
log(-8.4)
log(exp(-8.4))
exp(-8.4)
exp(1.76)
coef(lr_wf)
lr_wf |> tidy() |> summary()
lr_wf |> tidy() |> coef()
lr_wf |> tidy() |> coefficients()
lr_wf |> extract_recipe()
lr_wf |> extract_fit_engine()
lr_wf |> extract_fit_engine() |> summary()
lr_wf |> extract_fit_engine() |> coef()
lr_wf |> extract_fit_engine() |> coef() |> pull(intercept)
lr_wf |> extract_fit_engine() |> coef()
(lr_wf |> extract_fit_engine() |> coef())[1]
lr_wf |> extract_fit_engine() |> coef()[1]
exp((lr_wf |> extract_fit_engine() |> coef())[1])
exp(-.7577)
exp(3.43)
exp(-.9994)
exp(.3556)
lr_wf |> augment(testing(algerian_split))
lr_wf |> augment(testing(algerian_split))
lr_wf |> augment(testing(algerian_split)) |>
accuracy(classes, .pred_class)
algerian_test <- testing(algerian_split)
lr_wf |> augment(testing(algerian_test)) |>
accuracy(classes, .pred_class)
#| label: tbl-distro
#| tbl-cap: Distribution of the targer variable across regions
set.seed(123)
algerian_split <- initial_split(algerian_ff, prop = .7)
algerian_train <- training(algerian_split)
algerian_test <- testing(algerian_split)
algerian_train |>
count(region, classes)
lr_wf |> augment(algerian_test) |>
accuracy(classes, .pred_class)
lr_wf |>
augment(algerian_test))
lr_wf |>
augment(algerian_test)
lr_wf |>
augment(algerian_test) |>
sensitivity()
lr_wf |>
augment(algerian_test) |>
sensitivity(classes, .pred_class)
lr_wf |>
augment(algerian_test) |>
conf_mat(classes, .pred_class)
lr_wf |>
augment(algerian_test) |>
conf_mat(classes, .pred_class) |>
kable()
lr_wf |>
augment(algerian_test) |>
conf_mat(classes, .pred_class) |>
gt::gt()
lr_wf |>
augment(algerian_test) |>
conf_mat(classes, .pred_class)
lr_wf |>
augment(algerian_train) |>
precision(classes, .pred_class)
lr_wf |>
augment(algerian_test) |>
precision(classes, .pred_class)
lr_wf |>
augment(algerian_test) |>
roc_auc(classes, .pred_class)
lr_wf |>
augment(algerian_test)
lr_wf |>
augment(algerian_test) |>
mutate(
across(c(.pred_class, classes), \(x) ifelse(x == "not fire", 0, 1))
)
lr_wf |>
augment(algerian_test) |>
mutate(
across(c(.pred_class, classes), \(x) ifelse(x == "not fire", 0, 1))
) |>
roc_auc(classes, .pred_class)
lr_wf |>
augment(algerian_test) |>
# mutate(
#   across(c(.pred_class, classes), \(x) ifelse(x == "not fire", 0, 1))
# ) |>
roc_auc(classes, .pred_class)
lr_wf |>
augment(algerian_test) |>
# mutate(
#   across(c(.pred_class, classes), \(x) ifelse(x == "not fire", 0, 1))
# ) |>
roc_curve(classes, .pred_class)
two_class_example
lr_wf |>
augment(algerian_test) |>
# mutate(
#   across(c(.pred_class, classes), \(x) ifelse(x == "not fire", 0, 1))
# ) |>
roc_curve(classes, .pred_class, event_level = "second")
lr_wf |>
augment(algerian_test)
lr_wf |>
augment(algerian_test) |>
# mutate(
#   across(c(.pred_class, classes), \(x) ifelse(x == "not fire", 0, 1))
# ) |>
roc_curve(classes, .pred_fire)
lr_wf |>
augment(algerian_test) |>
# mutate(
#   across(c(.pred_class, classes), \(x) ifelse(x == "not fire", 0, 1))
# ) |>
roc_curve(classes, .pred_fire) |>
roc_auc()
lr_wf |>
augment(algerian_test) |>
# mutate(
#   across(c(.pred_class, classes), \(x) ifelse(x == "not fire", 0, 1))
# ) |>
roc_auc(classes, .pred_fire)
lr_wf |>
augment(algerian_test)
lr_wf |>
augment(algerian_test) |>
# mutate(
#   across(c(.pred_class, classes), \(x) ifelse(x == "not fire", 0, 1))
# ) |>
roc_auc(classes, `.pred_not fire`)
lr_wf |>
augment(algerian_test) |>
roc_auc(classes, `.pred_not fire`) |>
autoplot()
lr_wf |>
augment(algerian_test) |>
roc_curve(classes, `.pred_not fire`) |>
autoplot()
read_csv("SOA_1_2_Diam_Height.txt")
read_tsv("SOA_1_2_Diam_Height.txt")
library(tidyverse)
algeria_ff <- read_csv("data/Algerian_forest_fires_dataset_UPDATE.csv", skip = 1) |>
janitor::clean_names()
algeria_ff <- algeria_ff |>
mutate(
id = row_number(),
.before = day
)
algeria_ff <- read_csv("posts/algeria-fwi-prediction/data/Algerian _forest_fires_dataset_UPDATE.csv", skip = 1) |>
janitor::clean_names()
read_csv("posts/algeria-fwi-prediction/data/Algerian_forest_fires_dataset_UPDATE.csv", skip = 1)
algeria_ff <- read_csv("posts/algeria-fwi-prediction/data/Algerian _forest_fires_dataset_UPDATE.csv", skip = 1) |>
janitor::clean_names()
read_csv("posts/algeria-fwi-prediction/data/Algerian_forest_fires_dataset_UPDATE.csv", skip = 1) |>
janitor:clean_names()
read_csv("posts/algeria-fwi-prediction/data/Algerian_forest_fires_dataset_UPDATE.csv", skip = 1) |>
janitor::clean_names()
algeria_ff <- read_csv("posts/algeria-fwi-prediction/data/Algerian_forest_fires_dataset_UPDATE.csv", skip = 1) |>
janitor::clean_names()
algeria_ff <- algeria_ff |>
mutate(
id = row_number(),
.before = day
)
algeria_ff |>
mutate(
region = case_when(id <= 122 ~ "Bejaia",
.default = "Sidi-Bel Abbes"),
.before = day,
.keep = "unused"
)
algerian_ff <- algeria_ff |>
mutate(
region = case_when(id <= 122 ~ "Bejaia",
.default = "Sidi-Bel Abbes"),
.before = day,
.keep = "unused"
)
algerian_ff <- algerian_ff |>
drop_na() |>
filter(classes %in% c("not fire", "fire"))
algerian_ff <- algerian_ff |>
mutate(
region = factor(region),
classes = ifelse(classes == "not fire", 0, 1),
classes = factor(classes, labels = c("not fire", "fire"), levels = c(0 ,1)),
across(where(is.character), parse_number)
)
algerian_ff
algerian_ff |>
nanoparquet::write_parquet("posts/regularized_algeria_fire_pred/data/algeria.parquet")
pacman::p_load(tidyverse, nanoparquet)
read_parquet("data/algeria.parquet")
